<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>WebShell IDE</title>
    <style>

        .hide {
            opacity: 0;
        }

        .loading-iframe {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            border: none;
            background-color: #1e1e1e;
        }

        .workspace-loader {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            border: none;
        }

        .workspace {
            z-index: 1;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            border: none;
        }
    </style>
</head>
<body>
<iframe src="https://wx.cloudstudio.net/ws/embeded" class="workspace-loader"></iframe>
<iframe src="https://cs-res-1258344699.file.myqcloud.com/cloudstudio/vscode/3e54a6f80cbf72e76cc91bb32178e6b3ede84e3f/release-standalone/out/vs/code/browser/workbench/loading.html"
        class="loading-iframe hide"></iframe>
<script>
  const ws = new WebSocket('ws://127.0.0.1:8000/ide?<%= queryParams %>');
  ws.addEventListener('open', () => {

  });
  ws.addEventListener('message', ({data}) => {
    const options = JSON.parse(data);
    if (options.type === 'start-ide' && options.data.status === 'ok') {

      // 安装动画隐藏
      let ideInstallLoaderEl = document.body.getElementsByClassName('workspace-loader')[0];
      ideInstallLoaderEl.classList.add('hide');

      const loadingEl = document.body.getElementsByClassName('loading-iframe')[0];
      loadingEl.classList.remove('hide');

      const agentEl = document.createElement('iframe');
      agentEl.src = "/tty/<%= proxyKey %>/";
      agentEl.classList = 'workspace hide';
      ideInstallLoaderEl.parentNode.insertBefore(agentEl, ideInstallLoaderEl);

      const config = {
        attributes: true,
        attributeFilter: ['src'],
        attributeOldValue: true,
        characterData: false,
        characterDataOldValue: false,
        childList: false,
        subtree: true
      };
      const observer = new MutationObserver((mutations) => {
        mutations.forEach(function (mutation) {
          const nodes = Array.from(mutation.addedNodes);
          for (const node of nodes) {
            if (node.matches && node.matches('[class*="monaco-workbench"]')) {
              observer.disconnect();
              return;
            }
          }
        });
      });
      agentEl.onload = () => {
        loadingEl.classList.add('hide');
        agentEl.classList.remove('hide');
        observer.observe(agentEl.contentWindow.document.body, config);
      };
    }
  });
</script>
</body>
</html>
