<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <title>express -demo</title>
    <base href="/"/>
    <link rel="stylesheet" href="https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/js-base64@3.6.1/base64.min.js"></script>
    <script src="/js/download.js"></script>
    <link rel="manifest" href="/xterm.webmanifest">
    <meta name="theme-color" content="#0066ff"/>


    <style>
        #installApp {
            display: none;
        }
    </style>
    <script>
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/sw.js', {
          scope: "/",
        }).then(function (reg) {
          console.log('Successfully registered service worker', reg);
        }).catch(function (err) {
          console.warn('Error whilst registering service worker', err);
        });

        navigator.serviceWorker.addEventListener('message', event => {
          if (event.data.type === 'service-worker-activated') {
            console.log('Service Worker activated!');
          }
        });
      }
    </script>
</head>
<body>
<main>
    功能测试
    <ul>
        <% views.forEach(item => { %>
            <li><a href="/<%= item %>"><%= item %></a></li>
        <% }); %>
    </ul>

    <button id="installApp">
        install pwa app
    </button>
</main>
<div>
    主题切换：
    <button onclick="changeThemeMode(event)">
        change to dark
    </button>
</div>
<script>
  const themeTag = document.head.querySelector("meta[name='theme-color']")

  function changeThemeMode(e) {
    let isLight = themeTag.getAttribute('content') === '#0066ff';
    themeTag.setAttribute('content', isLight ? '#000000' : '#0066ff');
    e.target.innerText = isLight ? 'change to light' : 'change to dark';
  }

  const installApp = document.getElementById('installApp');

  window.addEventListener('beforeinstallprompt', (e) => {
    installApp.style.display = 'block';
    // 可以用于区分是否可以安装，非空表示可以安装，但空表示不支持安装或已经安装过了
    // isInstallAvailable
    window.deferredPrompt = e;
  });




  installApp.addEventListener('click', async () => {
    if (deferredPrompt !== null) {
      deferredPrompt.prompt();
      const {outcome} = await deferredPrompt.userChoice;
      if (outcome === 'accepted') {
        window.deferredPrompt = null;
      }
    }
  });

  /**
   * 测试是否是PWA模式启动
   * @type {MediaQueryList}
   */
  const displayMode = window.matchMedia('(display-mode: standalone)');
  if (displayMode.matches) {
    console.log('PWA is running in standalone mode.');
  } else {
    console.log('PWA is running in browser tab.');
  }


  function isStandalone() {
    if (window.matchMedia('(display-mode: standalone)').matches || ('standalone' in navigator && (navigator.standalone === true))) {
      return true;
    }
    return false;
  }
</script>
</body>
</html>
