<head>
    <title>xterm测试</title>
    <link href="/js/xterm.css" rel="stylesheet">
    <script src="/js/xterm.js"></script>
    <script src="/js/xterm-addon-web-links.js"></script>
    <script src="/js/xterm-addon-search.js"></script>
    <style>
        .hide {
            display: none;
        }
    </style>
</head>
<body>
<div id="terminal"></div>

<script>
  var term = new Terminal({
    rendererType: 'dom'
  });
  term.open(document.getElementById('terminal'));
  term.writeln('Hello from \x1B[1;3;31mxterm.js\x1B[0m $ ');
  term.writeln('Hello from \x1B[1;3;31mxterm.js\x1B[0m $ ');
  term.writeln('Hello from \x1B[1;3;31mxterm.js\x1B[0m $ ');
  term.writeln('Hello from \x1B[1;3;31mxterm.js\x1B[0m $ ');
  term.writeln('Hello from \x1B[1;3;31mxterm.js\x1B[0m $ ');
  term.writeln('https://1991421.cn');
  term.loadAddon(new WebLinksAddon.WebLinksAddon(
    (event, uri) => {
      if (event.metaKey) {
        window.open(uri);
      }
    }));
  let searchAddon = new SearchAddon.SearchAddon();
  term.loadAddon(searchAddon);
  term.attachCustomKeyEventHandler((event) => {
    if (event.key === 'f' && event.metaKey) {
      if (document.getElementsByClassName('search-terminal').length) {
        return;
      }
      const searcherEl = document.createElement('div');
      searcherEl.innerHTML = `<label class="search-terminal" for="search-terminal">
    搜索
    <input id="search-terminal" onkeydown="onEnter(event)" autofocus/>
    <button onclick="onFindPre(event)">pre</button>
    <button onclick="onFindNext(event)">next</button>
    <button onclick="onHide(event)">x</button>
</label>`;
      document.body.appendChild(searcherEl);
      searcherEl.children[0].focus();
      event.preventDefault();
      return false;
    }
    return true;
  });

  function onFindPre(event) {
    let value = event.target.parentElement.children[0].value;
    if (!value || !value.trim()) {
      return;
    }
    searchAddon.findPrevious(value, {
      caseSensitive: false,
      decorations: {
        activeMatchBackground: '#fffd54'
      }
    });
  }

  function onFindNext(event) {
    let value = event.target.parentElement.children[0].value;
    if (!value || !value.trim()) {
      return;
    }
    searchAddon.findNext(value, {
      caseSensitive: false,
      decorations: {
        activeMatchBackground: '#fffd54',
        activeMatchColorOverviewRuler: '#ff0000'
      }
    });
  }

  function onEnter(event) {
    let value = event.target.parentElement.children[0].value;
    if (!value.trim()) {
      return;
    }
    if (event.key === 'Enter') {
      onFindNext(event);
    }
  }

  function onHide(event) {
    const inputEl = event.target.parentElement;
    inputEl.remove();
    term.focus();
  }
</script>
</body>
