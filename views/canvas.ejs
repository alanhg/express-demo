<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Canvas压缩</title>
    <script src="/js/compressorjs/dist/compressor.min.js"></script>
</head>
<body>
<label for="selectImg">
    选择图片
</label>
<input type="file" id="selectImg" onchange="selectImgChange(event)"/>
<button onclick="compressPreview()">压缩</button>
<script>

  function selectImgChange(e) {
    let file = e.target.files[0];
    const divEl = document.createElement('div');
    if (!file.type.startsWith('image/')) {
      e.target.value = '';
      return;
    }
    divEl.innerText = file.size / 1024 + 'kb';
    document.body.appendChild(divEl);
  }


  /**
   *
   */
  function compressPreview() {
    const selectedImg = document.getElementById('selectImg')['files'][0];

    new Compressor(selectedImg, {
      strict: true,
      quality: 0.6,
      maxHeight: 2160,
      maxWidth: 3840,
      convertSize: 10000000,
      convertTypes: ['image/png', 'image/webp', 'image/avif'],
      mimeType: 'auto',
      success(result) {
        const filename = result.name;
        console.log(filename);
        const suffix = filename.substring(filename.lastIndexOf('.'));
        const filenameWithoutSuffix = filename.substring(0, filename.lastIndexOf('.'));
        downloadFile(result, `${filenameWithoutSuffix}_compress${suffix}`);
      },
      error(err) {
        console.log(err.message);
      },
    });
  }

  function downloadFile(file, name) {
    const blob = new Blob([file], {type: file.type});
    const el = document.createElement('a');
    document.body.appendChild(el);
    el.target = '_self';
    el.href = URL.createObjectURL(blob);
    el.download = name;
    el.click();
    URL.revokeObjectURL(el.href);
    document.body.removeChild(el);
  }

</script>
</body>
</html>
